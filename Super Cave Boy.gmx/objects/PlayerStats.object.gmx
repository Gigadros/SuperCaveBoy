<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize the Player Stats object
display_set_gui_size(view_wview[0], view_hview[0]);

// Initialize some variables
hp = 3;
maxhp = 3;
sapphires = 0;
score = 0;
highscore = 0;
time = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// To start the game
var start = keyboard_check_pressed(vk_space);

if(gamepad_is_connected(0)){
    start = gamepad_button_check_pressed(0, gp_start);
}

if(start == true &amp;&amp; room = rm_menu){
    room_goto(rm_1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Play the background music

audio_em = audio_emitter_create();
audio_emitter_gain(audio_em, 0.1);
audio_play_sound_on(audio_em, snd_music, true, 10);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw the stats
switch(room){
    case rm_menu:
        draw_set_halign(fa_center);
        draw_set_font(fnt_title);
        draw_text_colour(room_width/2+4, 24+6, "Super Cave#Boy", c_black, c_black, c_black, c_black, 1);
        draw_text_colour(room_width/2, 24, "Super Cave#Boy", c_white, c_white, c_white, c_white, 1);
        var str;
        if(gamepad_is_connected(0)){
            str = "Press [Start] to Play";
        }else{
            str = "Press [Space] to Play";
        }
        draw_set_font(fnt_start);
        draw_text_colour(room_width/2+2, room_height-44, str, c_black, c_black, c_black, c_black, 1);
        draw_text_colour(room_width/2, room_height-48, str, c_ltgray, c_ltgray, c_ltgray, c_ltgray, 1);
        break;
    
    case rm_highscore:
        draw_set_halign(fa_center);
        draw_text_colour(view_wview[0]/2, 64, "Your time was: " + string(floor(time/room_speed)), c_white, c_white, c_white, c_white, 1);
        draw_text_colour(view_wview[0]/2, 96, "Your score was: " + string(score), c_white, c_white, c_white, c_white, 1);
        draw_text_colour(view_wview[0]/2, 128, "The highscore is: " + string(highscore), c_white, c_white, c_white, c_white, 1);
        draw_sprite(spr_gui_sapphire, 0, view_wview[0]/2, 192);
        break;
        
    default:
        // Draw the hearts spaces
        for(var i = 0; i &lt; maxhp; i++){
            draw_sprite_ext(spr_heart, 0, 24 + i * 36, 20, 1, 1, 0, c_black, 0.5);
        }
        // Draw the hearts
        for(var i = 0; i &lt; hp; i++){
            draw_sprite_ext(spr_heart, 0, 24 + i * 36, 20, 1, 1, 0, c_white, 1);
        }
        // Draw the sapphire count
        draw_set_halign(fa_right);
        draw_set_font(fnt_start);
        var str = "x"+string(sapphires);
        draw_text_colour(view_wview[0]-16, 8, str, c_white, c_white, c_white, c_white, 1);
        var text_width = string_width(str);
        draw_sprite(spr_gui_sapphire, 0, view_wview[0]-32-text_width, 22);
        // Add to the time
        time += 1;
        // Draw the timer
        draw_text_colour(view_wview[0]/2+56, 8, "Time: "+string(floor(time/room_speed)), c_white, c_white, c_white, c_white, 1);
        break;      
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="27">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///End the game
game_end();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
